<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--把对象的创建教给spring来管理-->
    <!--spring对bean的管理细节
      1.创建bean对象的三种方式
      2.bean对象的作用范围
      3.bean对象的生命周期
    -->

    <!--创建bean对象的三种方式-->
    <!--使用默认构造器函数来构建对象，此时如果没有默认构造器，则对象无法构建成功-->
    <bean id="accountService" class="com.service.impl.AccountServiceImpl" scope="singleton"
          init-method="init" destroy-method="destory" ></bean>

    <!--第二种方式：使用普通工厂中的方法创建对象(使用某个类中的方法创建对象并存入spring容器中)-->
    <!--<bean id="beanFactory" class="com.factory.BeanFactory"/>-->
    <!--<bean id="accountService" factory-bean="beanFactory" factory-method="getAccountService"/>-->

    <!--第三种方式:使用工厂中的静态方法创建对象(使用某个类中的讲台方法创建对象，并存入spring容器)-->
    <!--<bean id="accountService" class="com.factory.BeanFactory" factory-method="getAccountService"/>-->
    <!--bean对象的生命周期：
        单例对象
           出生：当容器创建时出生(立即)
           活着：只要容器还在，对象一直活着
           死亡：容器销毁，对象死亡
           总结：单例对象的生命周期和容器相同
        多例对象：
           出生：当我们使用对象时spring框架为我们创建(延迟)
           活着：对象只要是在使用过程中就一直活着
           死亡：当对象长时间不用且没有别的对象使用时，有Java的垃圾回收器回收
        -->


</beans>